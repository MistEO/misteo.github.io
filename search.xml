<?xml version="1.0" encoding="utf-8"?>
<search> 
  
    
    <entry>
      <title>记一次Ubuntu下失败的显卡驱动安装</title>
      <link href="/2018/03/18/%E8%AE%B0Ubuntu%E4%B8%8B%E4%B8%80%E6%AC%A1%E5%A4%B1%E8%B4%A5%E7%9A%84%E6%98%BE%E5%8D%A1%E9%A9%B1%E5%8A%A8%E5%AE%89%E8%A3%85/"/>
      <content type="html"><![CDATA[<p>先上结论：<strong>Ubuntu 16.04 x64下，目前没有i3-8100的核显UHD630的驱动</strong>，所以别想了，加张独显吧！<br><a id="more"></a></p><p>从头说起，今天把办公室电脑的CPU和主板换了，从i3-7100升级到了i3-8100，想着Linux的驱动是一起上，应该是换完插上硬盘就能用的，结果正常开始，但是分辨率始终不对。只有1024*768一个选项，办公室的电脑有两个屏幕，也一直只能镜像显示不能分屏。</p><p>这还不简单改个分辨率不就得了，直接xrandr命令修改分辨率，却提示<code>failed to get size of gamma for output default</code>，查了很多教程，依旧无解。</p><p>点击上方状态栏上<code>关于计算机</code>，图形处理器没能正确识别（具体是什么不记得了，反正不是UHD630），遂想到驱动没有正确安装。Intel的核显也不是私有驱动，在<code>设置</code>-<code>软件和更新</code>-<code>附加驱动</code>中找不到可用驱动，按照网上教程安装了<code>intel graphics update tool</code>，<em>题外话，这货真是有毒，下载驱动奇慢无比，哪怕挂代理也经常下到一半断掉</em>，多次尝试最后提示成功，但设置仍没有中分辨率的选项，xrandr依旧报错。然后又反复卸载重装，装新版本（测试过最新版为2.0.3），反复重启等等，无果。</p><p>折腾了一晚上，万般无奈只能准备重装系统了，烧好了ubuntu的镜像，启动的时候图像想到了什么，点了<code>try ubuntu without installing</code>，果然进去分辨率也不对，只有1024*768。找同事电脑试了一下，<code>try ubuntu without installing</code>进去分辨率是正确的，ohshit还是驱动问题啊，压根就没有可以用的驱动。翻出了压箱底的一张GTS450，插上主板接上供电开机。分辨率一切正常，原先i3-7100的UHD630存在的次屏幕不能自动适配分辨率需要手动xrandr的问题也解决了。。虽说换个辣鸡独显性能可能要降一大半，不过毕竟不跑GPU运算，也不用这台电脑玩游戏，无所谓啦=。=</p><p>说到底还是Intel对Linux的支持不够友好，浪费了一晚上时间就很气吧- -</p>]]></content>
      
      
        <tags>
            
            <tag> Linux </tag>
            
            <tag> 吐槽 </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Ubuntu下源码编译安装最新版Shadowsocks-Qt5</title>
      <link href="/2018/03/08/Ubuntu%E4%B8%8B%E7%BC%96%E8%AF%91%E5%AE%89%E8%A3%85%E6%9C%80%E6%96%B0%E7%89%88Shadowsocks-Qt5/"/>
      <content type="html"><![CDATA[<p>既然说好的打造技术博客，总得写点干货什么的，正好前些日子买个了新的ss服务，买完才注意到加密方式是<code>chacha20-ietf-poly1305</code>，再一看Shadowsocks-Qt5在Ubuntu的软件源里面最新版本只是2.9，不支持啊，于是只能自己研究一下怎么弄了，遇到了不少坑，和大家分享一下经验方法。</p><a id="more"></a><h2 id="卸载旧版本Shadowsocks-Qt5"><a href="#卸载旧版本Shadowsocks-Qt5" class="headerlink" title="卸载旧版本Shadowsocks-Qt5"></a>卸载旧版本<code>Shadowsocks-Qt5</code></h2><pre><code class="bash">sudo apt-get purge shadowsocks-qt5</code></pre><h2 id="安装libsodium"><a href="#安装libsodium" class="headerlink" title="安装libsodium"></a>安装<code>libsodium</code></h2><pre><code class="bash">sudo apt-get install libsodium-dev</code></pre><h2 id="安装libbotan-2-x"><a href="#安装libbotan-2-x" class="headerlink" title="安装libbotan-2.x"></a>安装<code>libbotan-2.x</code></h2><p>下载解压编译安装，没啥好说的，可以访问<a href="https://botan.randombit.net/releases/" target="_blank" rel="noopener">Botan-Index of release</a> 获取最新本版，虽说新版本好像也没啥用XD</p><pre><code class="bash">wget https://botan.randombit.net/releases/Botan-2.3.0.tgztar xvf Botan-2.3.0.tgzcd Botan-2.3.0./configure.pymakesudo make installsudo ldconfig</code></pre><h2 id="安装libQtShadowsocks"><a href="#安装libQtShadowsocks" class="headerlink" title="安装libQtShadowsocks"></a>安装<code>libQtShadowsocks</code></h2><pre><code class="bash">sudo apt-get install qt5-qmake qtbase5-dev libqrencode-dev libqtshadowsocks-dev libappindicator-dev libzbar-dev libbotan1.10-devgit clone https://github.com/shadowsocks/libQtShadowsocks.gitmkdir buildcd buildcmake ..makesudo make install</code></pre><p>如果软件源中没有libqtshadowsocks-dev，可以使用pip安装</p><pre><code class="bash">sudo apt-get install python-pipsudo pip install shadowsocks</code></pre><p>如果原先安装过Qt，可能会提示找不到Qt目录，导入环境变量，然后重新编译安装</p><pre><code class="bash">export LD_LIBRARY_PATH=/opt/Qt5.10.0/5.10.0/gcc_64/lib/rm -rf *    #删除build文件夹中文件cmake ..makesudo make install</code></pre><h2 id="安装Shadowsocks-Qt5"><a href="#安装Shadowsocks-Qt5" class="headerlink" title="安装Shadowsocks-Qt5"></a>安装<code>Shadowsocks-Qt5</code></h2><pre><code class="bash">sudo apt-get install qt5-qmake qtbase5-dev libqrencode-dev libqtshadowsocks-dev libappindicator-dev libzbar-dev libbotan1.10-devgit clone https://github.com/shadowsocks/shadowsocks-qt5.gitcd shadowsocks-qt5mkdir buildcd buildcmake ..makesudo make install</code></pre><p>如果提示找不到Qt目录，编辑<code>CMakeLists.txt</code>，加入一行并保存</p><pre><code class="cmake">set(CMAKE_PREFIX_PATH &quot;/opt/Qt5.10.0/5.10.0/gcc_64&quot;)</code></pre><p>然后重新编译安装</p><pre><code class="bash">rm -rf *    #删除build文件夹中文件cmake ..makesudo make install</code></pre><h2 id="启动ss-qt5"><a href="#启动ss-qt5" class="headerlink" title="启动ss-qt5"></a>启动<code>ss-qt5</code></h2><p>直接启动即可</p><pre><code class="bash">ss-qt5</code></pre><p>若提示</p><pre><code class="bash">ss-qt5: /usr/lib/x86_64-linux-gnu/libQt5DBus.so.5: version `Qt_5&#39; not found (required by ss-qt5)ss-qt5: /usr/lib/x86_64-linux-gnu/libQt5Network.so.5: version `Qt_5&#39; not found (required by ss-qt5)ss-qt5: /usr/lib/x86_64-linux-gnu/libQt5Gui.so.5: version `Qt_5&#39; not found (required by ss-qt5)ss-qt5: /usr/lib/x86_64-linux-gnu/libQt5Core.so.5: version `Qt_5.10&#39; not found (required by ss-qt5)ss-qt5: /usr/lib/x86_64-linux-gnu/libQt5Core.so.5: version `Qt_5&#39; not found (required by ss-qt5)ss-qt5: /usr/lib/x86_64-linux-gnu/libQt5Widgets.so.5: version `Qt_5&#39; not found (required by ss-qt5)</code></pre><p>则还是环境变量的问题，导入后重新启动即可</p><pre><code class="bash">export LD_LIBRARY_PATH=/opt/Qt5.10.0/5.10.0/gcc_64/libss-qt5</code></pre><p>启动后在<code>帮助</code>-<code>关于</code>查看一下版本号若是新版就ok了<br><img src="/post_images/ss-qt5.png" alt="ss-qt5"></p><p>这时手动添加一个新连接，就已经可以看到加密方式中有<code>chacha20-ietf-poly1305</code>选项了<br><img src="/post_images/ss-connect.png" alt="配置新连接"></p><h2 id="Tips"><a href="#Tips" class="headerlink" title="Tips"></a>Tips</h2><p>可以写个sh，放到桌面双击启动</p><pre><code class="bash">#/bin/bashexport LD_LIBRARY_PATH=/opt/Qt5.10.0/5.10.0/gcc_64/libss-qt5</code></pre><p>将<code>文件管理器</code>-<code>编辑</code>-<code>首选项</code>-<code>行为</code>-<code>可执行文本文件</code>修改为<code>打开可执行文本文件时运行它们</code>即可，别忘了给sh脚本执行权限哦<br><img src="/post_images/file-settings.png" alt="文件行为设置"></p><p>顺便说一下命令行中如何使用ss，以及<code>method chacha20-ietf-poly1305 not supported</code>咋解决</p><p>新建json文件，内容格式如下</p><pre><code class="json">{    &quot;server&quot;: &quot;1.2.3.4&quot;,    &quot;server_port&quot;: &quot;1234&quot;,    &quot;password&quot;: &quot;1234567&quot;    &quot;local_address&quot;: &quot;127.0.0.1&quot;,    &quot;local_port&quot;: 1080,    &quot;timeout&quot;:300,    &quot;method&quot;:&quot;chacha20-ietf-poly1305&quot;,    &quot;fast_open&quot;: false,    &quot;workers&quot;: 1&quot;}</code></pre><p>然后安装最新版本ss并从文件中配置启动即可</p><pre><code class="bash">sudo pip install https://github.com/shadowsocks/shadowsocks/archive/master.zip -Usslocal -c xxx.json</code></pre><p>想让命令走ss推荐使用<code>porxychains</code>，具体使用方法可以Google一下不再赘述</p><h2 id="参考资料"><a href="#参考资料" class="headerlink" title="参考资料"></a>参考资料</h2><ul><li><a href="https://github.com/shadowsocks/shadowsocks-qt5/issues/595#issue" target="_blank" rel="noopener">Add support for chacha20-ietf-poly1305 #595</a></li><li><a href="http://www.lujza.me/kali-linux-%E4%B8%8B%E5%AE%89%E8%A3%85-shadowsocks-qt5-%E5%8F%8A%E4%BD%BF%E7%94%A8%E6%95%99%E7%A8%8B.html" target="_blank" rel="noopener">Kali Linux 下安装 Shadowsocks-qt5 及使用教程</a></li></ul>]]></content>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> Linux </tag>
            
        </tags>
      
    </entry>
    
    <entry>
      <title>Hello Hexo</title>
      <link href="/2018/03/07/Hello-World/"/>
      <content type="html"><![CDATA[<p>emmm，这大概就是第一篇博文了</p>]]></content>
      
      
        <tags>
            
            <tag> 吐槽 </tag>
            
        </tags>
      
    </entry>
    
  
  
</search>
